<!DOCTYPE html>
<!-- using carousel module from https://desandro.github.io/3dtransforms/examples/carousel-02-dynamic.html -->
<html lang="en" class=" js csstransforms3d"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


  <!-- disable zooming -->
  <meta name="viewport" content="initial-scale=1.0, user-scalable=0">

  <title>Carousel 2 - dynamic · Intro to CSS 3D transforms › Examples</title>

  <link rel="stylesheet" href="css/style.css" media="screen">
  <link rel="stylesheet" href="css/carousel.css" media="screen">
  <link rel="stylesheet" href="css/slot-machine.css" media="screen">


</head>
<body class=" ready">

  <h1>Carousel 2 - dynamic</h1>

  <section class="container">
    <div id="carousel1" class="carousel" style="transform: translateZ(-192px) rotateX(-1160deg);">
      <figure style="opacity: 1; background-color: rgba(255, 0, 0, 1); transform: rotateX(0deg) translateZ(192px); background-image: url('images/coffee-maker.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(255, 170, 0, 1); transform: rotateX(40deg) translateZ(192px); background-image: url('images/teapot.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(170, 255, 0, 1); transform: rotateX(80deg) translateZ(192px); background-image: url('images/espresso-machine.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(0, 255, 0, 1); transform: rotateX(120deg) translateZ(192px); background-image: url('images/coffee-maker.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(0, 255, 170, 1); transform: rotateX(160deg) translateZ(192px); background-image: url('images/teapot.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(0, 170, 255, 1); transform: rotateX(200deg) translateZ(192px); background-image: url('images/espresso-machine.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(0, 0, 255, 1); transform: rotateX(240deg) translateZ(192px); background-image: url('images/coffee-maker.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(170, 0, 255, 1); transform: rotateX(280deg) translateZ(192px); background-image: url('images/teapot.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(255, 0, 170, 1); transform: rotateX(320deg) translateZ(192px); background-image: url('images/espresso-machine.png')"></figure>
    </div>
</section>
 <section class="container">
    <div id="carousel2" class="carousel" style="transform: translateZ(-192px) rotateX(-1160deg);">
      <figure style="opacity: 1; background-color: rgba(255, 0, 0, 1); transform: rotateX(0deg) translateZ(192px); background-image: url('images/coffee-filter.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(255, 170, 0, 1); transform: rotateX(40deg) translateZ(192px); background-image: url('images/tea-strainer.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(170, 255, 0, 1); transform: rotateX(80deg) translateZ(192px); background-image: url('images/espresso-tamper.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(0, 255, 0, 1); transform: rotateX(120deg) translateZ(192px); background-image: url('images/coffee-maker.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(0, 255, 170, 1); transform: rotateX(160deg) translateZ(192px); background-image: url('images/teapot.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(0, 170, 255, 1); transform: rotateX(200deg) translateZ(192px); background-image: url('images/espresso-machine.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(0, 0, 255, 1); transform: rotateX(240deg) translateZ(192px); background-image: url('images/coffee-maker.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(170, 0, 255, 1); transform: rotateX(280deg) translateZ(192px); background-image: url('images/teapot.png')"></figure>
      <figure style="opacity: 1; background-color: rgba(255, 0, 170, 1); transform: rotateX(320deg) translateZ(192px); background-image: url('images/espresso-machine.png')"></figure>
    </div>
</section>
 <section class="container">
    <div id="carousel3" class="carousel" style="transform: translateZ(-192px) rotateX(-1160deg);">
        <figure style="opacity: 1; background-color: rgba(255, 0, 0, 1); transform: rotateX(0deg) translateZ(192px); background-image: url('images/coffee-maker.png')"></figure>
        <figure style="opacity: 1; background-color: rgba(255, 170, 0, 1); transform: rotateX(40deg) translateZ(192px); background-image: url('images/teapot.png')"></figure>
        <figure style="opacity: 1; background-color: rgba(170, 255, 0, 1); transform: rotateX(80deg) translateZ(192px); background-image: url('images/espresso-machine.png')"></figure>
        <figure style="opacity: 1; background-color: rgba(0, 255, 0, 1); transform: rotateX(120deg) translateZ(192px); background-image: url('images/coffee-maker.png')"></figure>
        <figure style="opacity: 1; background-color: rgba(0, 255, 170, 1); transform: rotateX(160deg) translateZ(192px); background-image: url('images/teapot.png')"></figure>
        <figure style="opacity: 1; background-color: rgba(0, 170, 255, 1); transform: rotateX(200deg) translateZ(192px); background-image: url('images/espresso-machine.png')"></figure>
        <figure style="opacity: 1; background-color: rgba(0, 0, 255, 1); transform: rotateX(240deg) translateZ(192px); background-image: url('images/coffee-maker.png')"></figure>
        <figure style="opacity: 1; background-color: rgba(170, 0, 255, 1); transform: rotateX(280deg) translateZ(192px); background-image: url('images/teapot.png')"></figure>
        <figure style="opacity: 1; background-color: rgba(255, 0, 170, 1); transform: rotateX(320deg) translateZ(192px); background-image: url('images/espresso-machine.png')"></figure>
    </div>

  </section>

  <section id="options">
    <p>
      <label for="panel-count">panels</label>
      <input type="range" id="panel-count" value="9" min="3" max="20">
    <span class=" range-display">9</span></p>

    <p id="navigation">
      <button id="previous" data-increment="-1">Previous</button>
      <button id="next" data-increment="1">Next</button>
    </p>

    <p>
      <button id="toggle-axis">Toggle Carousel Axis</button>
    </p>

    <p>
      <button id="toggle-backface-visibility">Toggle Backface Visibility</button>
    </p>

  </section>

  <script src="./try_files/utils.js"></script>
  <script>
    var transformProp = Modernizr.prefixed('transform');

    function Carousel3D ( el ) {
      this.element = el;

      this.rotation = 0;
      this.panelCount = 0;
      this.totalPanelCount = this.element.children.length;
      this.theta = 0;

      this.isHorizontal = false;

    }

    Carousel3D.prototype.modify = function() {

      var panel, angle, i;

      this.panelSize = this.element[ this.isHorizontal ? 'offsetWidth' : 'offsetHeight' ];
      this.rotateFn = this.isHorizontal ? 'rotateY' : 'rotateX';
      this.theta = 360 / this.panelCount;

      // do some trig to figure out how big the carousel
      // is in 3D space
      this.radius = Math.round( ( this.panelSize / 2) / Math.tan( Math.PI / this.panelCount ) );

      for ( i = 0; i < this.panelCount; i++ ) {
        panel = this.element.children[i];
        angle = this.theta * i;
        panel.style.opacity = 1;
        panel.style.backgroundColor = 'hsla(' + angle + ', 100%, 50%, 0.9)';
        // rotate panel, then push it out in 3D space
        panel.style[ transformProp ] = this.rotateFn + '(' + angle + 'deg) translateZ(' + this.radius + 'px)';
      }

      // hide other panels
      for (  ; i < this.totalPanelCount; i++ ) {
        panel = this.element.children[i];
        panel.style.opacity = 0;
        panel.style[ transformProp ] = 'none';
      }

      // adjust rotation so panels are always flat
      this.rotation = Math.round( this.rotation / this.theta ) * this.theta;

      this.transform();

    };

    Carousel3D.prototype.transform = function() {
      // push the carousel back in 3D space,
      // and rotate it
      this.element.style[ transformProp ] = 'translateZ(-' + this.radius + 'px) ' + this.rotateFn + '(' + this.rotation + 'deg)';
    };



    var init = function() {


      var carousel = new Carousel3D( document.getElementById('carousel1') ),
      carousel2 = new Carousel3D( document.getElementById('carousel2') ),
      carousel3 = new Carousel3D( document.getElementById('carousel3') ),
          panelCountInput = document.getElementById('panel-count'),
          axisButton = document.getElementById('toggle-axis'),
          navButtons = document.querySelectorAll('#navigation button'),

          onNavButtonClick = function( event ){
            var increment = parseInt( event.target.getAttribute('data-increment') );
            var currentTime = (new Date()).getTime(), preTime = currentTime;
            var velocity = 16, deceleration = 0.18 + (Math.random() * 0.2 - 0.1); // plus or minus 0.1
            var velocity2 = 17, deceleration2 = 0.15 + (Math.random() * 0.2 - 0.1); // plus or minus 0.1
            var velocity3 = 18, deceleration3 = 0.12 + (Math.random() * 0.2 - 0.1); // plus or minus 0.1
            var timerID = setInterval(function() {
                // carousel.rotation += carousel.theta * increment * -1;
                currentTime = (new Date()).getTime();
                carousel.rotation -= velocity;
                carousel2.rotation -= velocity2;
                carousel3.rotation -= velocity3;
                velocity -= deceleration;
                velocity2 -= deceleration2;
                velocity3 -= deceleration3;
                if (velocity < 0) {
                    velocity = 0;
                } else {
                    carousel.transform();
                }
                if (velocity2 < 0) {
                    velocity2 = 0;
                } else {
                    carousel2.transform();
                }
                if (velocity3 < 0) {
                    velocity3 = 0;
                } else {
                    carousel3.transform();
                }
                if (velocity <= 0 && velocity2 <= 0 && velocity3 <= 0) {
                    clearInterval(timerID);
                }
                //
                // carousel2.transform();
                // carousel3.transform();
                console.log("theta, panelCount", carousel.theta, carousel.panelCount, carousel, currentTime - preTime, velocity );
                preTime = currentTime;
            }, 33);
            // carousel.rotation += carousel.theta * increment * -1;
            // carousel.transform();
          };

      // populate on startup
      carousel.panelCount = parseInt( panelCountInput.value, 10);
      carousel.modify();

      carousel2.panelCount = parseInt( panelCountInput.value, 10);
      carousel2.modify();

      carousel3.panelCount = parseInt( panelCountInput.value, 10);
      carousel3.modify();

      axisButton.addEventListener( 'click', function(){
        carousel.isHorizontal = !carousel.isHorizontal;
        carousel.modify();
      }, false);

      panelCountInput.addEventListener( 'change', function( event ) {
        carousel.panelCount = event.target.value;
        carousel.modify();
      }, false);

      for (var i=0; i < 2; i++) {
        navButtons[i].addEventListener( 'click', onNavButtonClick, false);
      }

      document.getElementById('toggle-backface-visibility').addEventListener( 'click', function(){
        carousel.element.toggleClassName('panels-backface-invisible');
      }, false);

      setTimeout( function(){
        document.body.addClassName('ready');
      }, 0);

    };

    window.addEventListener( 'DOMContentLoaded', init, false);
  </script>


  <p id="disclaimer">Sorry, your browser does not support CSS 3D transforms. This example may be broken.</p>

  <footer>
  <p><a href="https://desandro.github.io/3dtransforms/">Intro to CSS 3D transforms</a> by David DeSandro</p>
  <p>Article content licensed <a href="http://creativecommons.org/licenses/by/2.0/">CC-BY</a>.
      All example code licensed <a href="http://desandro.mit-license.org/">MIT</a>.</p>
  <p><a href="https://github.com/desandro/3dtransforms/issues/">Help improve these docs. Open an issue or pull request.</a></p>
</footer>



</body></html>
